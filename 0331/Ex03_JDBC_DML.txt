<%@page import="java.sql.DriverManager"%>
<%@page import="java.util.Scanner"%>
<%@page import="java.sql.Statement"%>
<%@page import="java.sql.Connection"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%
	/*
	 DML
	 JDBC API 통해서 작업
	 1.결과 집합이 없다
	 2.반영결과(반영된 행의 수가 return)
	 
	 update emp set sal = 0 실행하게되면 14가 리턴
	 update emp set sal = 100 where empno=1111 0이 리턴
	 
	 java 코드 조건처리 통해서 (성공과 실패를 판단)
	 
	 KEY POINT
	 1.Oracle DML 작업(developer, cmd ...) 하면 기본 옶션이 commit or
	 rollback이 강제
	 2.JDBC API 사용해서 DML 작업하면 autocommit이 default
	 3.java 코드에서 delete from emp 실행하면 자동으로 commit이 실행되서 실반영된다
	 4.필요에 따라서 commit rollback java코드에서 제어가능
	시작 
	 A계좌에서 인출(update)
	 B계좌에서 입금(update)
	종료  여기까지 하나의 논리적인 단위 (transaction) 트랜직션
	 autocommit 옵션을 false로 전환하게되면
	 java code에서는 
	 
	*/
	
	Connection conn = null;
	Statement stmt = null;
	
	try{
		Class.forName("oracle.jdbc.OracleDriver");
  		conn = DriverManager.getConnection("jdbc:oracle:thin:@192.168.0.35:1521:xe","bituser","1004");
		System.out.println("연결 여부 : false :" + conn.isClosed());
		
		stmt = conn.createStatement();
		
		//Insert
		int empno = 0;
		String ename = "";
		int deptno = 0;
		
		Scanner sc = new Scanner(System.in);
		System.out.println("사번 입력");
		empno = Integer.parseInt(sc.nextLine());
		
		
		System.out.println("이름 입력");
		ename = sc.nextLine();
		
	
		System.out.println("부서번호 입력");
		deptno = Integer.parseInt(sc.nextLine());
		
		//
		//조선시대 방식~ 지금은 parameter로 설정하는게 있다
		String sql="insert into dmlemp(empno,ename,deptno) ";
		sql+= " values(" +empno+",'" + ename + "'," + deptno+ ")";
		
		int resultrow = stmt.executeUpdate(sql);
		//executeUpdate 오라클 실행시 
		//ORA-00001: unique constraint (BITUSER.PK_DMEMP_EMPNO) violated
		
		//UPDATE
		/* 
		int deptno = 20;
		String sql ="update dmlemp set sal = 0 where deptno=" +deptno;
		
		int resultrow = stmt.executeUpdate(sql); 
		*/
		
		//DELETE
		/* 
		int deptno = 20;
		String sql ="delete from dmlemp where deptno=" +deptno;
		
		int resultrow = stmt.executeUpdate(sql);
		*/
		if(resultrow > 0){
			System.out.println("반영된 행의 수 : " + resultrow);
			
		}else{
			//POINT
			//문제가 생긴것이 아니고(예외가 발생된 것이 아니라 반영된 행이 없다)
			System.out.println("반영된 행이 없다");
		}
				
	}catch(Exception e){
		System.out.println(e.getMessage());
		 //여기서 코드 처리
		 //*********************************************
		 //예외발생에 대한 코드 처리
		 //*********************************************
	}finally{
		if(stmt != null)try {stmt.close();}catch (Exception e) {}
		if(conn != null)try {conn.close();}catch (Exception e) {}
	}
	
%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

</body>
</html>